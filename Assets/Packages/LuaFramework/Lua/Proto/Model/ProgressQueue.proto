syntax = "proto2";

import "ProgressEntityVec.proto";

package Game.KingsMan.Model;

/** @Inject
 * protected override string GetIdentityId()
 * {
 *     return ID.ToString();
 * }
 */
// @SuperClass: global::ZyGames.Framework.Model.BaseEntity
// @Tag: [global::ZyGames.Framework.Model.EntityTable(global::ZyGames.Framework.Model.AccessLevel.ReadWrite, global::ZyGames.Framework.Model.CacheType.Dictionary, true, "User", "ProgressQueue", 0, "ID")]
//                                                                       访问级别,                                          缓存的类型,          存变动是否更新到数据库, 映射到数据连接Key配置,映射到表名,缓存的生命周期(秒), 绑定表中主键字段名 
message ProgressQueue															//队列（升级卡牌，升级建筑等）
{
	// @PropertyModifier: public override
	// @Tag: [global::ZyGames.Framework.Model.EntityField(FieldName = @"Version")]
	required int32 Version = 20000;

	// @Tag: [global::ZyGames.Framework.Model.EntityField(FieldName = @"ID", IsKey = true)]
	required int32 ID = 1;

	// @Tag: [global::ZyGames.Framework.Model.EntityField(FieldName = @"MaxCount")]
	required int32 MaxCount = 2;									// 允许同时存在队列的上限
		
	// @CollectionType: global::ZyGames.Framework.Cache.Generic.CacheDictionary 
	// @Tag: [global::ZyGames.Framework.Model.EntityField(FieldName = @"ProgressTable", IsJsonSerialize = true, DbType = ZyGames.Framework.Model.ColumnDbType.LongBlob)]
	map<string,ProgressEntityVec> ProgressTable = 3;     // 存在的队列列表（升级卡牌，升级建筑等，动态操作，当有一个新的Progress进来时动态生成一个Progress,结束后删除掉）

	// @Tag: [global::ZyGames.Framework.Model.EntityField(FieldName = @"UUIDCounter")]
	required int32 UUIDCounter = 4;   // UUID 计数器，用于累加生成UUID。

}